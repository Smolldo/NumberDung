{"version":3,"sources":["js/rule.js","js/greeting-window.js","js/name.js","js/index.js"],"names":["rules","document","querySelector","ruleBtn","names","text","nameS","classList","toggle","setAttribute","line","count","result","typeLine","interval","setTimeout","textContent","length","clearTimeout","getRandomInt","max","Math","floor","random","addEventListener","refs","backDrop","startBtn","exitBtn","ruleWindow","StartGame","remove","m","play","ExitGame","window","location","reload","inp","nameBtn","gameScreen","heroName","forms","screens","push","NameConfirming","value","style","borderBottomColor","placeholder","console","log","forEach","element","add","SubmitName","e","key","volume","b","PLAYER"],"mappings":";AA+CA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EA9CA,IAAIA,EAAQC,SAASC,cAAc,cAC7BC,EAAUF,SAASC,cAAc,iBACjCE,EAAQH,SAASC,cAAc,eAC/BG,EAAO,CAAC,sBACd,8CACA,2CACA,sDACA,oCACA,sDACA,4BAEMC,EAAQ,WACZF,EAAMG,UAAUC,OAAO,WACvBL,EAAQM,aAAa,WAAY,SAG/BC,EAAO,EACPC,EAAQ,EACRC,EAAS,GACAC,EAAW,SAAXA,IACPC,IAAAA,EAAWC,WACb,WAIIJ,GAHFC,GAAUP,EAAKK,GAAMC,GACrBX,EAAMgB,YAAaJ,EAAQ,MAC7BD,GACaN,EAAKK,GAAMO,SACtBN,EAAQ,IACRD,GACYL,EAAKY,QAGR,OAFPC,aAAaJ,GACZd,EAAMgB,YAAaJ,GACb,EAGXC,KACCM,EAAaA,EAAa,SAI/B,SAASA,EAAaC,GACfC,OAAAA,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,IAM7C,QAAA,SAAA,EAAAjB,EAAQqB,iBAAiB,QAASlB;;ACrBlC,aA1BA,IAAA,EAAA,QAAA,UAEMmB,EAAO,CACTC,SAAUzB,SAASC,cAAc,aACjCyB,SAAU1B,SAASC,cAAc,mCACjC0B,QAAS3B,SAASC,cAAc,kCAChC2B,WAAY5B,SAASC,cAAc,gBAKhC4B,EAAY,WACfL,EAAKC,SAASnB,UAAUC,OAAO,aAC/BiB,EAAKI,WAAWtB,UAAUwB,OAAO,cACjC,EAAA,EAAA,YACAN,EAAKO,EAAEC,QAILC,EAAW,WACbC,OAAOC,SAASC,UAIpBZ,EAAKE,SAASH,iBAAiB,QAASM,GAExCL,EAAKG,QAAQJ,iBAAiB,QAAS,WACnCU;;AC3BJ,IAAMT,EAAO,CACTa,IAAKrC,SAASC,cAAc,gBAC5BqC,QAAStC,SAASC,cAAc,iBAChCsC,WAAYvC,SAASC,cAAc,eACnCuC,SAAUxC,SAASC,cAAc,gBACjCF,MAAOC,SAASC,cAAc,eAC9BE,MAAOH,SAASC,cAAc,eAC9BwC,MAAOzC,SAASC,cAAc,eAG5ByC,EAAS,GACfA,EAAQC,KAAKnB,EAAKzB,OAClB2C,EAAQC,KAAKnB,EAAKiB,OAElB,IAAMG,EAAiB,WACG,KAAnBpB,EAAKa,IAAIQ,OACRrB,EAAKa,IAAIS,MAAMC,kBAAoB,MACnCvB,EAAKa,IAAIW,YAAc,gBAGvBC,QAAQC,IAAI,cACZ1B,EAAKrB,MAAMG,UAAUC,OAAO,WAC5BiB,EAAKgB,SAASzB,YAAcS,EAAKa,IAAIQ,MACrCrB,EAAKe,WAAWjC,UAAUC,OAAO,MACjCmC,EAAQS,QAAQ,SAAAC,GACZA,EAAQ9C,UAAU+C,IAAI,cAK5BC,EAAa,SAACC,GACH,UAAVA,EAAEC,KAIDZ,KAIRpB,EAAKc,QAAQf,iBAAiB,QAASqB,GACvCV,OAAOX,iBAAiB,QAAS+B;;AC1BjC,aAdA,QAAA,qBACA,QAAA,UACA,QAAA,UAIA,IAAMvB,EAAI/B,SAASC,cAAc,QACjC8B,EAAE0B,OAAS,GACX,IAAMC,EAAI1D,SAASC,cAAc,cAE3B0D,EAAS,WACX5B,EAAEC,QAGN0B,EAAEnC,iBAAiB,QAASoC","file":"js.75db21e6.js","sourceRoot":"..\\src","sourcesContent":["\r\nlet rules = document.querySelector('.rule_list');\r\nconst ruleBtn = document.querySelector('.rule_confirm');\r\nconst names = document.querySelector('.name_block');\r\nconst text = ['1. Select a name.\\n',\r\n\"2. By pressing the 'generate' button, you\\n\",\r\n\"and the AI ​​will have random numbers.\\n\",\r\n\"3. Whoever has the highest number wins the round.\\n\",\r\n\"4. The game lasts up to 3 wins.\\n\",\r\n\"5. In case of a tie, an additional round is held.\\n\",\r\n\"6. Good luck, Samurai.\\n\"];\r\n\r\nconst nameS = () =>{\r\n  names.classList.toggle('is-none');\r\n  ruleBtn.setAttribute(\"disabled\", \"true\")\r\n}\r\n\r\nlet line = 0;\r\nlet count = 0;\r\nlet result = '';\r\nexport const typeLine = () => {\r\n  let interval = setTimeout(\r\n    () => {\r\n      result += text[line][count]\r\n      rules.textContent =result +'|';\r\n    count++;\r\n    if (count >= text[line].length) {\r\n      count = 0;\r\n      line++;\r\n      if (line == text.length) {\r\n        clearTimeout(interval);\r\n         rules.textContent =result;\r\n        return true;\r\n      }\r\n    }\r\n    typeLine();\r\n  }, getRandomInt(getRandomInt(25*2.5)))\r\n}\r\n\r\n\r\nfunction getRandomInt(max) {\r\nreturn Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\n///////////////\r\n\r\n\r\nruleBtn.addEventListener('click', nameS);","import {typeLine} from './rule';\r\n\r\nconst refs = {\r\n    backDrop: document.querySelector('.backdrop'),\r\n    startBtn: document.querySelector('.greet_btn[data-action=\"start\"]'),\r\n    exitBtn: document.querySelector('.greet_btn[data-action=\"exit\"]'),\r\n    ruleWindow: document.querySelector('.rule_cover'),\r\n}\r\n\r\n//const clikSound= new Audio('./audio/boss.mp3')\r\n//functions\r\n const StartGame = () => {\r\n    refs.backDrop.classList.toggle('is-hidden');\r\n    refs.ruleWindow.classList.remove('is-hidden');\r\n    typeLine();\r\n    refs.m.play();\r\n  // clikSound.play();\r\n}\r\n\r\nconst ExitGame = () => {\r\n    window.location.reload();\r\n}\r\n\r\n//listeners\r\nrefs.startBtn.addEventListener('click', StartGame)\r\n\r\nrefs.exitBtn.addEventListener('click', () => {\r\n    ExitGame();\r\n})\r\n\r\n","const refs = {\r\n    inp: document.querySelector('#player_name'),\r\n    nameBtn: document.querySelector('.name_confirm'),\r\n    gameScreen: document.querySelector('.game_field'),\r\n    heroName: document.querySelector('.player_name'),\r\n    rules: document.querySelector('.rule_cover'),\r\n    names: document.querySelector('.name_block'),\r\n    forms: document.querySelector('.name_form')\r\n}\r\n\r\nconst screens =[];\r\nscreens.push(refs.rules);\r\nscreens.push(refs.forms);\r\n\r\nconst NameConfirming = () => {\r\n    if(refs.inp.value === \"\"){\r\n        refs.inp.style.borderBottomColor = \"red\";\r\n        refs.inp.placeholder = \"Enter name!\";\r\n    } \r\n    else{\r\n        console.log(\"Good name!\");\r\n        refs.names.classList.toggle('is-none')\r\n        refs.heroName.textContent = refs.inp.value;\r\n        refs.gameScreen.classList.toggle('is')\r\n        screens.forEach(element => {\r\n            element.classList.add('is-end');\r\n        });\r\n    }\r\n}\r\n////////\r\nconst SubmitName = (e) => {\r\n    if(e.key !== \"Enter\"){\r\n        return;\r\n    }\r\n    else{\r\n        NameConfirming();\r\n    }\r\n}\r\n\r\nrefs.nameBtn.addEventListener('click', NameConfirming);\r\nwindow.addEventListener('keyup', SubmitName);","import './greeting-window';\r\nimport './rule';\r\nimport './name';\r\n\r\n\r\n\r\nconst m = document.querySelector('.mus');\r\nm.volume = 0.1;\r\nconst b = document.querySelector('.sound_btn');\r\n\r\nconst PLAYER = () =>{\r\n    m.play();\r\n}\r\n\r\nb.addEventListener('click', PLAYER);\r\n\r\n"]}