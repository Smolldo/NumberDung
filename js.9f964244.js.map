{"version":3,"sources":["js/rule.js","js/greeting-window.js","js/fight.js","js/name.js","js/game-scripts.js","js/index.js"],"names":["rules","document","querySelector","ruleBtn","names","text","nameS","classList","toggle","setAttribute","line","count","result","typeLine","interval","setTimeout","textContent","length","clearTimeout","getRandomInt","max","Math","floor","random","addEventListener","refs","backDrop","startBtn","exitBtn","ruleWindow","StartGame","remove","ExitGame","window","location","reload","enemyBlock","enemyText","enemyButton","heroBlock","heroText","heroButton","gameField","firstDialog","i","j","speed","typeWriter","charAt","heroWriter","NextPhrase","StartFight","inp","nameBtn","gameScreen","heroName","forms","enemyPhraseBlock","screens","push","NameConfirming","value","style","borderBottomColor","placeholder","console","log","forEach","element","add","SubmitName","e","key","generateBtn","numberSpanPlayer","numberSpanComputer","healthBarPlayer","healthBarComputer","liComp","winWeb","looseWeb","bossBtn","retryBTN","item","createElement","appendChild","generator","a","getRandInt","b","cloneNode","x","RETRY","m","volume","PLAYER","play"],"mappings":";AA+CA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EA9CA,IAAIA,EAAQC,SAASC,cAAc,cAC7BC,EAAUF,SAASC,cAAc,iBACjCE,EAAQH,SAASC,cAAc,eAC/BG,EAAO,CAAC,sBACd,8CACA,2CACA,sDACA,oCACA,sDACA,4BAEMC,EAAQ,WACZF,EAAMG,UAAUC,OAAO,WACvBL,EAAQM,aAAa,WAAY,SAG/BC,EAAO,EACPC,EAAQ,EACRC,EAAS,GACAC,EAAW,SAAXA,IACPC,IAAAA,EAAWC,WACb,WAIIJ,GAHFC,GAAUP,EAAKK,GAAMC,GACrBX,EAAMgB,YAAaJ,EAAQ,MAC7BD,GACaN,EAAKK,GAAMO,SACtBN,EAAQ,IACRD,GACYL,EAAKY,QAGR,OAFPC,aAAaJ,GACZd,EAAMgB,YAAaJ,GACb,EAGXC,KACCM,EAAaA,EAAa,SAI/B,SAASA,EAAaC,GACfC,OAAAA,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,IAM7C,QAAA,SAAA,EAAAjB,EAAQqB,iBAAiB,QAASlB;;ACtBlC,aAzBA,IAAA,EAAA,QAAA,UAEMmB,EAAO,CACTC,SAAUzB,SAASC,cAAc,aACjCyB,SAAU1B,SAASC,cAAc,mCACjC0B,QAAS3B,SAASC,cAAc,kCAChC2B,WAAY5B,SAASC,cAAc,gBAKhC4B,EAAY,WACfL,EAAKC,SAASnB,UAAUC,OAAO,aAC/BiB,EAAKI,WAAWtB,UAAUwB,OAAO,cAFZ,EAAA,EAAA,aAOnBC,EAAW,WACbC,OAAOC,SAASC,UAIpBV,EAAKE,SAASH,iBAAiB,QAASM,GAExCL,EAAKG,QAAQJ,iBAAiB,QAAS,WACnCQ;;AC6BJ,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gBAAA,EAtDA,IAAMP,EAAO,CACTW,WAAYnC,SAASC,cAAc,iBACnCmC,UAAWpC,SAASC,cAAc,eAClCoC,YAAarC,SAASC,cAAc,aACpCqC,UAAWtC,SAASC,cAAc,gBAClCsC,SAAUvC,SAASC,cAAc,cACjCuC,WAAYxC,SAASC,cAAc,iBACnCwC,UAAWzC,SAASC,cAAc,SAClCyC,YAAa1C,SAASC,cAAc,kBAGlCG,EAAO,CAAC,kFACd,kBAIIuC,EAAI,EAAGC,EAAI,EACXC,EAAQ,GAECC,EAAa,SAAbA,IACPH,EAAIvC,EAAK,GAAGY,SACdQ,EAAKY,UAAUrB,aAAeX,EAAK,GAAG2C,OAAOJ,GAC7CA,IACA7B,WAAWgC,EAAYD,KA+B3B,QAAA,WAAA,EA3BA,IAAMG,EAAa,SAAbA,IACEJ,EAAIxC,EAAK,GAAGY,SACdQ,EAAKe,SAASxB,aAAeX,EAAK,GAAG2C,OAAOH,GAC5CA,IACA9B,WAAWkC,EAAYH,KAKvBI,EAAa,WACfzB,EAAKW,WAAW7B,UAAUC,OAAO,MACjCiB,EAAKc,UAAUhC,UAAUC,OAAO,MAChCyC,KAGJxB,EAAKa,YAAYd,iBAAiB,QAAS0B,GAG3C,IAAMC,EAAa,WAEf1B,EAAKc,UAAUhC,UAAUC,OAAO,MAEhCiB,EAAKiB,UAAUnC,UAAUC,OAAO,MAChCiB,EAAKkB,YAAYpC,UAAUC,OAAO,OAItCiB,EAAKgB,WAAWjB,iBAAiB,QAAS2B;;ACV1C,aA7CA,IAAA,EAAA,QAAA,WACM1B,EAAO,CACT2B,IAAKnD,SAASC,cAAc,gBAC5BmD,QAASpD,SAASC,cAAc,iBAChCoD,WAAYrD,SAASC,cAAc,eACnCqD,SAAUtD,SAASC,cAAc,gBACjCF,MAAOC,SAASC,cAAc,eAC9BE,MAAOH,SAASC,cAAc,eAC9BsD,MAAOvD,SAASC,cAAc,cAE9BuD,iBAAkBxD,SAASC,cAAc,kBAGvCwD,EAAS,GACfA,EAAQC,KAAKlC,EAAKzB,OAClB0D,EAAQC,KAAKlC,EAAK+B,OAElB,IAAMI,EAAiB,WACG,KAAnBnC,EAAK2B,IAAIS,OACRpC,EAAK2B,IAAIU,MAAMC,kBAAoB,MACnCtC,EAAK2B,IAAIY,YAAc,gBAGvBC,QAAQC,IAAI,cACZzC,EAAKrB,MAAMG,UAAUC,OAAO,WAC5BiB,EAAK8B,SAASvC,YAAcS,EAAK2B,IAAIS,MACrCpC,EAAK6B,WAAW/C,UAAUC,OAAO,MACjCiB,EAAKgC,iBAAiBlD,UAAUC,OAAO,MACvCkD,EAAQS,QAAQ,SAAAC,GACZA,EAAQ7D,UAAU8D,IAAI,aAE1B,EAAA,EAAA,gBAIFC,EAAa,SAACC,GACH,UAAVA,EAAEC,KAIDZ,KAIRnC,EAAK4B,QAAQ7B,iBAAiB,QAASoC,GACvC3B,OAAOT,iBAAiB,QAAS8C;;AC5C7B,IAAM7C,EAAO,CACTgD,YAAaxE,SAASC,cAAc,iBACpCwE,iBAAkBzE,SAASC,cAAc,eACzCyE,mBAAoB1E,SAASC,cAAc,eAC3C0E,gBAAiB3E,SAASC,cAAc,sBACxC2E,kBAAmB5E,SAASC,cAAc,wBAE1C4E,OAAQ7E,SAASC,cAAc,mBAC/B6E,OAAQ9E,SAASC,cAAc,iBAC/B8E,SAAU/E,SAASC,cAAc,mBACjC+E,QAAShF,SAASC,cAAc,mBAChCgF,SAAUjF,SAASC,cAAc,WAGjCiF,EAAOlF,SAASmF,cAAc,MAClCD,EAAK5E,UAAU8D,IAAI,oBACnBc,EAAKnE,YAAc,GACnBS,EAAKmD,gBAAgBS,YAAYF,GAGjC,IAAMG,EAAY,WACdvE,WAAW,WACHwE,IAAAA,EAAIC,EAAW,KACnBC,EAAID,EAAW,KAEnB/D,EAAKiD,iBAAiB1D,YAAcuE,EACpC9D,EAAKkD,mBAAmB3D,YAAcyE,EACnCF,EAAIE,EACHN,EAAKO,WAAU,GAGfjE,EAAKmD,gBAAgBS,YAAYF,IAEnC,MAGAK,EAAa,SAACG,GACTtE,OAAAA,KAAKC,MAAMD,KAAKC,MAAMqE,GAAKtE,KAAKE,WAGrCqE,EAAQ,WACV3D,OAAOC,SAASC,UAGpBV,EAAKyD,SAAS1D,iBAAiB,QAASoE,GACxCnE,EAAKgD,YAAYjD,iBAAiB,QAAS8D;;AC9B/C,aAhBA,QAAA,qBACA,QAAA,UACA,QAAA,UACA,QAAA,WACA,QAAA,kBAIA,IAAMO,EAAI5F,SAASC,cAAc,QACjC2F,EAAEC,OAAS,GACX,IAAML,EAAIxF,SAASC,cAAc,cAE3B6F,EAAS,WACXF,EAAEG,QAGNP,EAAEjE,iBAAiB,QAASuE","file":"js.9f964244.js","sourceRoot":"..\\src","sourcesContent":["\r\nlet rules = document.querySelector('.rule_list');\r\nconst ruleBtn = document.querySelector('.rule_confirm');\r\nconst names = document.querySelector('.name_block');\r\nconst text = ['1. Select a name.\\n',\r\n\"2. By pressing the 'generate' button, you\\n\",\r\n\"and the AI ​​will have random numbers.\\n\",\r\n\"3. Whoever has the highest number wins the round.\\n\",\r\n\"4. The game lasts up to 3 wins.\\n\",\r\n\"5. In case of a tie, an additional round is held.\\n\",\r\n\"6. Good luck, Samurai.\\n\"];\r\n\r\nconst nameS = () =>{\r\n  names.classList.toggle('is-none');\r\n  ruleBtn.setAttribute(\"disabled\", \"true\");\r\n}\r\n\r\nlet line = 0;\r\nlet count = 0;\r\nlet result = '';\r\nexport const typeLine = () => {\r\n  let interval = setTimeout(\r\n    () => {\r\n      result += text[line][count]\r\n      rules.textContent =result +'|';\r\n    count++;\r\n    if (count >= text[line].length) {\r\n      count = 0;\r\n      line++;\r\n      if (line == text.length) {\r\n        clearTimeout(interval);\r\n         rules.textContent =result;\r\n        return true;\r\n      }\r\n    }\r\n    typeLine();\r\n  }, getRandomInt(getRandomInt(25*2.5)))\r\n}\r\n\r\n\r\nfunction getRandomInt(max) {\r\nreturn Math.floor(Math.random() * Math.floor(max));\r\n}\r\n\r\n///////////////\r\n\r\n\r\nruleBtn.addEventListener('click', nameS);","import {typeLine} from './rule';\r\n\r\nconst refs = {\r\n    backDrop: document.querySelector('.backdrop'),\r\n    startBtn: document.querySelector('.greet_btn[data-action=\"start\"]'),\r\n    exitBtn: document.querySelector('.greet_btn[data-action=\"exit\"]'),\r\n    ruleWindow: document.querySelector('.rule_cover'),\r\n}\r\n\r\n//const clikSound= new Audio('./audio/boss.mp3')\r\n//functions\r\n const StartGame = () => {\r\n    refs.backDrop.classList.toggle('is-hidden');\r\n    refs.ruleWindow.classList.remove('is-hidden');\r\n    typeLine();\r\n  // clikSound.play();\r\n}\r\n\r\nconst ExitGame = () => {\r\n    window.location.reload();\r\n}\r\n\r\n//listeners\r\nrefs.startBtn.addEventListener('click', StartGame)\r\n\r\nrefs.exitBtn.addEventListener('click', () => {\r\n    ExitGame();\r\n})\r\n\r\n","\r\nconst refs = {\r\n    enemyBlock: document.querySelector('.enemy_phrase'),\r\n    enemyText: document.querySelector('.enemy_text'),\r\n    enemyButton: document.querySelector('.next_btn'),\r\n    heroBlock: document.querySelector('.hero_phrase'),\r\n    heroText: document.querySelector('.hero_text'),\r\n    heroButton: document.querySelector('.start_battle'),\r\n    gameField: document.querySelector('.game'),\r\n    firstDialog: document.querySelector('.first_dialog')\r\n};\r\n\r\nconst text = [\"Yo, fucker! I wil fuck u up and all your fucking family u fucking motherfucker!\",\r\n\"Come get some!\"];\r\n\r\n\r\n//typing function\r\nlet i = 0, j = 0;\r\nlet speed = 30;\r\n\r\nexport const typeWriter = () => {\r\n  if (i < text[0].length) {\r\n    refs.enemyText.textContent += text[0].charAt(i);\r\n    i++;\r\n    setTimeout(typeWriter, speed);\r\n  }\r\n}\r\n////\r\nconst heroWriter = () => {\r\n    if (j < text[1].length) {\r\n      refs.heroText.textContent += text[1].charAt(j);\r\n      j++;\r\n      setTimeout(heroWriter, speed);\r\n    }\r\n  }\r\n\r\n//next phrase\r\nconst NextPhrase = () =>{\r\n    refs.enemyBlock.classList.toggle('is');\r\n    refs.heroBlock.classList.toggle('is');\r\n    heroWriter();\r\n}\r\n\r\nrefs.enemyButton.addEventListener('click', NextPhrase);\r\n\r\n//FightButton\r\nconst StartFight = () =>{\r\n    //close hero\r\n    refs.heroBlock.classList.toggle('is');\r\n    //start fight\r\n    refs.gameField.classList.toggle('is');\r\n    refs.firstDialog.classList.toggle('is')\r\n}\r\n\r\n\r\nrefs.heroButton.addEventListener('click', StartFight);\r\n","import { typeWriter } from \"./fight\";\r\nconst refs = {\r\n    inp: document.querySelector('#player_name'),\r\n    nameBtn: document.querySelector('.name_confirm'),\r\n    gameScreen: document.querySelector('.game_field'),\r\n    heroName: document.querySelector('.player_name'),\r\n    rules: document.querySelector('.rule_cover'),\r\n    names: document.querySelector('.name_block'),\r\n    forms: document.querySelector('.name_form'),\r\n    ////first dialog\r\n    enemyPhraseBlock: document.querySelector('.enemy_phrase')\r\n}\r\n\r\nconst screens =[];\r\nscreens.push(refs.rules);\r\nscreens.push(refs.forms);\r\n\r\nconst NameConfirming = () => {\r\n    if(refs.inp.value === \"\"){\r\n        refs.inp.style.borderBottomColor = \"red\";\r\n        refs.inp.placeholder = \"Enter name!\";\r\n    } \r\n    else{\r\n        console.log(\"Good name!\");\r\n        refs.names.classList.toggle('is-none')\r\n        refs.heroName.textContent = refs.inp.value;\r\n        refs.gameScreen.classList.toggle('is')\r\n        refs.enemyPhraseBlock.classList.toggle('is')\r\n        screens.forEach(element => {\r\n            element.classList.add('is-end');\r\n        });\r\n        typeWriter();\r\n    }\r\n}\r\n////////\r\nconst SubmitName = (e) => {\r\n    if(e.key !== \"Enter\"){\r\n        return;\r\n    }\r\n    else{\r\n        NameConfirming();\r\n    }\r\n}\r\n\r\nrefs.nameBtn.addEventListener('click', NameConfirming);\r\nwindow.addEventListener('keyup', SubmitName);","\r\n    const refs = {\r\n        generateBtn: document.querySelector('.generate_btn'),\r\n        numberSpanPlayer: document.querySelector('.num_now_pl'),\r\n        numberSpanComputer: document.querySelector('.num_now_ai'),\r\n        healthBarPlayer: document.querySelector('.round_list_player'),\r\n        healthBarComputer: document.querySelector('.round_list_computer'),\r\n        //liComp: document.querySelector('.player_round_box'),\r\n        liComp: document.querySelector('.comp_round_box'),\r\n        winWeb: document.querySelector('.backdrop_win'),\r\n        looseWeb: document.querySelector('.backdrop_loose'),\r\n        bossBtn: document.querySelector('.boss_fight_btn'),\r\n        retryBTN: document.querySelector('.retry')\r\n    }\r\n    /////\r\n    let item = document.createElement('li');\r\n    item.classList.add('player_round_box');\r\n    item.textContent = 34;\r\n    refs.healthBarPlayer.appendChild(item);\r\n    ////\r\n    \r\n    const generator = () =>{\r\n        setTimeout(()=>{\r\n            let a = getRandInt(900);\r\n        let b = getRandInt(900);\r\n\r\n        refs.numberSpanPlayer.textContent = a;\r\n        refs.numberSpanComputer.textContent = b;\r\n        if(a < b){\r\n            item.cloneNode(true);\r\n        }\r\n        else{\r\n            refs.healthBarPlayer.appendChild(item);\r\n        }\r\n        },400)\r\n    }\r\n    \r\n    const getRandInt = (x) =>{\r\n        return Math.floor(Math.floor(x) * Math.random())\r\n    }\r\n\r\n    const RETRY = () =>{\r\n        window.location.reload();\r\n    }\r\n\r\n    refs.retryBTN.addEventListener('click', RETRY);\r\n    refs.generateBtn.addEventListener('click', generator);\r\n\r\n","import './greeting-window';\r\nimport './rule';\r\nimport './name';\r\nimport './fight';\r\nimport './game-scripts';\r\n\r\n\r\n\r\nconst m = document.querySelector('.mus');\r\nm.volume = 0.1;\r\nconst b = document.querySelector('.sound_btn');\r\n\r\nconst PLAYER = () =>{\r\n    m.play();\r\n}\r\n\r\nb.addEventListener('click', PLAYER);\r\n"]}