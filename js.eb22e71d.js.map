{"version":3,"sources":["js/rule.js","js/greeting-window.js","js/index.js"],"names":["rules","document","querySelector","ruleBtn","text","line","count","result","typeLine","interval","setTimeout","textContent","length","clearTimeout","getRandomInt","max","Math","floor","random","refs","backDrop","startBtn","exitBtn","ruleWindow","StartGame","classList","toggle","remove","ExitGame","window","location","reload","addEventListener"],"mappings":";AAoCC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAnCD,IAAIA,EAAQC,SAASC,cAAc,cAC7BC,EAAUF,SAASC,cAAc,iBACjCE,EAAO,CAAC,sBACd,8CACA,2CACA,sDACA,oCACA,sDACA,4BAEIC,EAAO,EACPC,EAAQ,EACRC,EAAS,GACAC,EAAW,SAAXA,IACPC,IAAAA,EAAWC,WACb,WAIIJ,GAHFC,GAAUH,EAAKC,GAAMC,GACrBN,EAAMW,YAAaJ,EAAQ,MAC7BD,GACaF,EAAKC,GAAMO,SACtBN,EAAQ,IACRD,GACYD,EAAKQ,QAGR,OAFPC,aAAaJ,GACZT,EAAMW,YAAaJ,GACb,EAGXC,KACCM,EAAaA,EAAa,SAI/B,SAASA,EAAaC,GACfC,OAAAA,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,IAC5C,QAAA,SAAA;;ACXD,aAzBA,IAAA,EAAA,QAAA,UAEMI,EAAO,CACTC,SAAUnB,SAASC,cAAc,aACjCmB,SAAUpB,SAASC,cAAc,mCACjCoB,QAASrB,SAASC,cAAc,kCAChCqB,WAAYtB,SAASC,cAAc,gBAKhCsB,EAAY,WACfL,EAAKC,SAASK,UAAUC,OAAO,aAC/BP,EAAKI,WAAWE,UAAUE,OAAO,cAFZ,EAAA,EAAA,aAOnBC,EAAW,WACbC,OAAOC,SAASC,UAIpBZ,EAAKE,SAASW,iBAAiB,QAASR,GAExCL,EAAKG,QAAQU,iBAAiB,QAAS,WACnCJ;;ACzBJ,aADA,QAAA,qBACA,QAAA","file":"js.eb22e71d.js","sourceRoot":"..\\src","sourcesContent":["\r\nlet rules = document.querySelector('.rule_list');\r\nconst ruleBtn = document.querySelector('.rule_confirm');\r\nconst text = ['1. Select a name.\\n',\r\n\"2. By pressing the 'generate' button, you\\n\",\r\n\"and the AI ​​will have random numbers.\\n\",\r\n\"3. Whoever has the highest number wins the round.\\n\",\r\n\"4. The game lasts up to 3 wins.\\n\",\r\n\"5. In case of a tie, an additional round is held.\\n\",\r\n\"6. Good luck, Samurai.\\n\"];\r\n\r\nlet line = 0;\r\nlet count = 0;\r\nlet result = '';\r\nexport const typeLine = () => {\r\n  let interval = setTimeout(\r\n    () => {\r\n      result += text[line][count]\r\n      rules.textContent =result +'|';\r\n    count++;\r\n    if (count >= text[line].length) {\r\n      count = 0;\r\n      line++;\r\n      if (line == text.length) {\r\n        clearTimeout(interval);\r\n         rules.textContent =result;\r\n        return true;\r\n      }\r\n    }\r\n    typeLine();\r\n  }, getRandomInt(getRandomInt(25*2.5)))\r\n}\r\n\r\n\r\nfunction getRandomInt(max) {\r\nreturn Math.floor(Math.random() * Math.floor(max));\r\n}","import {typeLine} from './rule';\r\n\r\nconst refs = {\r\n    backDrop: document.querySelector('.backdrop'),\r\n    startBtn: document.querySelector('.greet_btn[data-action=\"start\"]'),\r\n    exitBtn: document.querySelector('.greet_btn[data-action=\"exit\"]'),\r\n    ruleWindow: document.querySelector('.rule_cover'),\r\n}\r\n\r\n//const clikSound= new Audio('./audio/boss.mp3')\r\n//functions\r\n const StartGame = () => {\r\n    refs.backDrop.classList.toggle('is-hidden');\r\n    refs.ruleWindow.classList.remove('is-hidden');\r\n    typeLine();\r\n  // clikSound.play();\r\n}\r\n\r\nconst ExitGame = () => {\r\n    window.location.reload();\r\n}\r\n\r\n//listeners\r\nrefs.startBtn.addEventListener('click', StartGame)\r\n\r\nrefs.exitBtn.addEventListener('click', () => {\r\n    ExitGame();\r\n})\r\n\r\n","import './greeting-window';\r\nimport './rule';\r\n\r\n\r\n\r\n"]}